-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.chat_messages (
  message_id uuid NOT NULL DEFAULT gen_random_uuid(),
  game_id uuid NOT NULL,
  sender_player_id uuid,
  sender_player_name text,
  channel_type USER-DEFINED NOT NULL,
  dm_target_player_id_1 uuid,
  dm_target_player_id_2 uuid,
  message_text text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT chat_messages_pkey PRIMARY KEY (message_id),
  CONSTRAINT chat_messages_dm_target_player_id_2_fkey FOREIGN KEY (dm_target_player_id_2) REFERENCES public.players(player_id),
  CONSTRAINT chat_messages_dm_target_player_id_1_fkey FOREIGN KEY (dm_target_player_id_1) REFERENCES public.players(player_id),
  CONSTRAINT chat_messages_sender_player_id_fkey FOREIGN KEY (sender_player_id) REFERENCES public.players(player_id)
);
CREATE TABLE public.game_events (
  event_id uuid NOT NULL DEFAULT gen_random_uuid(),
  game_code text NOT NULL,
  day_number integer,
  event_phase USER-DEFINED,
  event_type text NOT NULL,
  actor_player_id uuid,
  target_player_id uuid,
  role_involved_name text,
  details jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT game_events_pkey PRIMARY KEY (event_id),
  CONSTRAINT game_events_target_player_id_fkey FOREIGN KEY (target_player_id) REFERENCES public.players(player_id),
  CONSTRAINT game_events_actor_player_id_fkey FOREIGN KEY (actor_player_id) REFERENCES public.players(player_id),
  CONSTRAINT game_events_game_code_fkey FOREIGN KEY (game_code) REFERENCES public.games(game_code),
  CONSTRAINT game_events_role_involved_name_fkey FOREIGN KEY (role_involved_name) REFERENCES public.roles(role_name)
);
CREATE TABLE public.game_votes (
  vote_id uuid NOT NULL DEFAULT gen_random_uuid(),
  game_code text NOT NULL,
  day_number integer NOT NULL,
  voting_phase USER-DEFINED NOT NULL,
  election_target_role_name text,
  voter_player_id uuid NOT NULL,
  voted_player_id uuid NOT NULL,
  is_chairman_double_vote boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT game_votes_pkey PRIMARY KEY (vote_id),
  CONSTRAINT game_votes_game_code_fkey FOREIGN KEY (game_code) REFERENCES public.games(game_code),
  CONSTRAINT game_votes_voter_player_id_fkey FOREIGN KEY (voter_player_id) REFERENCES public.players(player_id),
  CONSTRAINT game_votes_voted_player_id_fkey FOREIGN KEY (voted_player_id) REFERENCES public.players(player_id),
  CONSTRAINT game_votes_election_target_role_name_fkey FOREIGN KEY (election_target_role_name) REFERENCES public.roles(role_name)
);
CREATE TABLE public.games (
  game_code text NOT NULL UNIQUE,
  host_user_id uuid,
  current_phase USER-DEFINED NOT NULL DEFAULT 'Lobby'::game_phase,
  current_day integer NOT NULL DEFAULT 0,
  max_players integer NOT NULL DEFAULT 10,
  current_player_count integer NOT NULL DEFAULT 0,
  chairman_player_id uuid,
  treasurer_player_id uuid,
  group_points_pool numeric NOT NULL DEFAULT 0.00,
  max_points_per_day_m numeric NOT NULL DEFAULT 0.00,
  houses_of_worship_virtue integer NOT NULL DEFAULT 0,
  houses_of_worship_vice integer NOT NULL DEFAULT 0,
  last_phase_change_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  Tutorial boolean NOT NULL DEFAULT false,
  include_outreach_phase boolean NOT NULL DEFAULT true,
  CONSTRAINT games_pkey PRIMARY KEY (game_code),
  CONSTRAINT fk_games_chairman_player FOREIGN KEY (chairman_player_id) REFERENCES public.players(player_id),
  CONSTRAINT fk_games_treasurer_player FOREIGN KEY (treasurer_player_id) REFERENCES public.players(player_id),
  CONSTRAINT games_host_user_id_fkey FOREIGN KEY (host_user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.player_actions (
  action_id uuid NOT NULL DEFAULT gen_random_uuid(),
  game_code text NOT NULL,
  day_number integer NOT NULL,
  acting_player_id uuid NOT NULL,
  acting_role_name text NOT NULL,
  action_type USER-DEFINED NOT NULL,
  target_player_id uuid,
  secondary_target_id uuid,
  target_tier USER-DEFINED,
  points_spent numeric NOT NULL,
  action_successful boolean DEFAULT true,
  action_details jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT player_actions_pkey PRIMARY KEY (action_id),
  CONSTRAINT player_actions_acting_role_name_fkey FOREIGN KEY (acting_role_name) REFERENCES public.roles(role_name),
  CONSTRAINT player_actions_acting_player_id_fkey FOREIGN KEY (acting_player_id) REFERENCES public.players(player_id),
  CONSTRAINT player_actions_target_player_id_fkey FOREIGN KEY (target_player_id) REFERENCES public.players(player_id),
  CONSTRAINT player_actions_secondary_target_id_fkey FOREIGN KEY (secondary_target_id) REFERENCES public.players(player_id),
  CONSTRAINT player_actions_game_code_fkey FOREIGN KEY (game_code) REFERENCES public.games(game_code)
);
CREATE TABLE public.player_active_effects (
  active_effect_id uuid NOT NULL DEFAULT gen_random_uuid(),
  game_code text NOT NULL,
  target_player_id uuid NOT NULL,
  source_player_id uuid,
  source_role_name text,
  effect_type USER-DEFINED NOT NULL,
  effect_value text,
  day_applied integer NOT NULL,
  duration_days integer NOT NULL DEFAULT 1,
  expires_at_day integer NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT player_active_effects_pkey PRIMARY KEY (active_effect_id),
  CONSTRAINT player_active_effects_game_code_fkey FOREIGN KEY (game_code) REFERENCES public.games(game_code),
  CONSTRAINT player_active_effects_target_player_id_fkey FOREIGN KEY (target_player_id) REFERENCES public.players(player_id),
  CONSTRAINT player_active_effects_source_player_id_fkey FOREIGN KEY (source_player_id) REFERENCES public.players(player_id),
  CONSTRAINT player_active_effects_source_role_name_fkey FOREIGN KEY (source_role_name) REFERENCES public.roles(role_name)
);
CREATE TABLE public.player_protections (
  protection_id uuid NOT NULL DEFAULT gen_random_uuid(),
  game_code text NOT NULL,
  day_number integer NOT NULL,
  protector_player_id uuid NOT NULL,
  protected_player_id uuid NOT NULL,
  protection_type text NOT NULL DEFAULT 'murder_intoxication'::text,
  expires_at_day integer NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT player_protections_pkey PRIMARY KEY (protection_id),
  CONSTRAINT player_protections_protector_player_id_fkey FOREIGN KEY (protector_player_id) REFERENCES public.players(player_id),
  CONSTRAINT player_protections_protected_player_id_fkey FOREIGN KEY (protected_player_id) REFERENCES public.players(player_id),
  CONSTRAINT player_protections_game_code_fkey FOREIGN KEY (game_code) REFERENCES public.games(game_code)
);
CREATE TABLE public.players (
  player_id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  player_name text NOT NULL,
  is_guest boolean DEFAULT false,
  current_role_name text,
  original_role_name text,
  personal_points numeric NOT NULL DEFAULT 0.00,
  status USER-DEFINED NOT NULL DEFAULT 'Alive'::player_status,
  current_y_value numeric DEFAULT NULL::numeric,
  effective_identity_player_id uuid,
  last_mini_game_rank integer,
  joined_at timestamp with time zone DEFAULT now(),
  conversion_history jsonb DEFAULT '[]'::jsonb,
  role_inherited_from uuid,
  game_code text,
  CONSTRAINT players_pkey PRIMARY KEY (player_id),
  CONSTRAINT players_original_role_name_fkey FOREIGN KEY (original_role_name) REFERENCES public.roles(role_name),
  CONSTRAINT players_current_role_name_fkey FOREIGN KEY (current_role_name) REFERENCES public.roles(role_name),
  CONSTRAINT players_game_code_fkey FOREIGN KEY (game_code) REFERENCES public.games(game_code),
  CONSTRAINT players_role_inherited_from_fkey FOREIGN KEY (role_inherited_from) REFERENCES public.players(player_id),
  CONSTRAINT players_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT players_effective_identity_player_id_fkey FOREIGN KEY (effective_identity_player_id) REFERENCES public.players(player_id)
);
CREATE TABLE public.reflection_phase_guesses (
  guess_id uuid NOT NULL DEFAULT gen_random_uuid(),
  game_code text NOT NULL,
  day_number integer NOT NULL,
  guessing_player_id uuid NOT NULL,
  guessed_player_id uuid NOT NULL,
  guessed_role_name text NOT NULL,
  is_correct boolean,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT reflection_phase_guesses_pkey PRIMARY KEY (guess_id),
  CONSTRAINT reflection_phase_guesses_guessing_player_id_fkey FOREIGN KEY (guessing_player_id) REFERENCES public.players(player_id),
  CONSTRAINT reflection_phase_guesses_game_code_fkey FOREIGN KEY (game_code) REFERENCES public.games(game_code),
  CONSTRAINT reflection_phase_guesses_guessed_role_name_fkey FOREIGN KEY (guessed_role_name) REFERENCES public.roles(role_name),
  CONSTRAINT reflection_phase_guesses_guessed_player_id_fkey FOREIGN KEY (guessed_player_id) REFERENCES public.players(player_id)
);
CREATE TABLE public.role_conversions (
  conversion_id uuid NOT NULL DEFAULT gen_random_uuid(),
  game_code text NOT NULL,
  day_number integer NOT NULL,
  converter_player_id uuid NOT NULL,
  converter_role_id uuid NOT NULL,
  target_player_id uuid NOT NULL,
  original_role_name text NOT NULL,
  new_role_name text NOT NULL,
  original_faction USER-DEFINED NOT NULL,
  new_faction USER-DEFINED NOT NULL,
  points_spent numeric NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT role_conversions_pkey PRIMARY KEY (conversion_id),
  CONSTRAINT role_conversions_new_role_name_fkey FOREIGN KEY (new_role_name) REFERENCES public.roles(role_name),
  CONSTRAINT role_conversions_original_role_name_fkey FOREIGN KEY (original_role_name) REFERENCES public.roles(role_name),
  CONSTRAINT role_conversions_game_code_fkey FOREIGN KEY (game_code) REFERENCES public.games(game_code),
  CONSTRAINT role_conversions_target_player_id_fkey FOREIGN KEY (target_player_id) REFERENCES public.players(player_id),
  CONSTRAINT role_conversions_converter_player_id_fkey FOREIGN KEY (converter_player_id) REFERENCES public.players(player_id)
);
CREATE TABLE public.role_inheritance_choices (
  inheritance_id uuid NOT NULL DEFAULT gen_random_uuid(),
  game_code text NOT NULL,
  day_number integer NOT NULL,
  deceased_player_id uuid NOT NULL,
  deceased_role_name text NOT NULL,
  inheritor_player_id uuid NOT NULL,
  original_inheritor_role_name text NOT NULL,
  choice_made_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT role_inheritance_choices_pkey PRIMARY KEY (inheritance_id),
  CONSTRAINT role_inheritance_choices_deceased_role_name_fkey FOREIGN KEY (deceased_role_name) REFERENCES public.roles(role_name),
  CONSTRAINT role_inheritance_choices_deceased_player_id_fkey FOREIGN KEY (deceased_player_id) REFERENCES public.players(player_id),
  CONSTRAINT role_inheritance_choices_inheritor_player_id_fkey FOREIGN KEY (inheritor_player_id) REFERENCES public.players(player_id),
  CONSTRAINT role_inheritance_choices_game_code_fkey FOREIGN KEY (game_code) REFERENCES public.games(game_code),
  CONSTRAINT role_inheritance_choices_original_inheritor_role_name_fkey FOREIGN KEY (original_inheritor_role_name) REFERENCES public.roles(role_name)
);
CREATE TABLE public.roles (
  role_name text NOT NULL UNIQUE,
  faction USER-DEFINED NOT NULL,
  tier USER-DEFINED NOT NULL,
  description text,
  ability_name text,
  ability_description text,
  ability_cost_formula text,
  ability_target_type USER-DEFINED,
  ability_effect_type USER-DEFINED,
  can_be_assigned_randomly boolean NOT NULL DEFAULT true,
  max_uses_per_day integer,
  max_uses_per_game integer,
  unique boolean NOT NULL DEFAULT false,
  CONSTRAINT roles_pkey PRIMARY KEY (role_name)
);
CREATE TABLE public.secretary_vote_announcements (
  announcement_id uuid NOT NULL DEFAULT gen_random_uuid(),
  game_code text NOT NULL,
  day_number integer NOT NULL,
  secretary_player_id uuid NOT NULL,
  actual_votes jsonb NOT NULL,
  announced_votes jsonb NOT NULL,
  voting_phase USER-DEFINED NOT NULL,
  is_truthful boolean NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT secretary_vote_announcements_pkey PRIMARY KEY (announcement_id),
  CONSTRAINT secretary_vote_announcements_secretary_player_id_fkey FOREIGN KEY (secretary_player_id) REFERENCES public.players(player_id),
  CONSTRAINT secretary_vote_announcements_game_code_fkey FOREIGN KEY (game_code) REFERENCES public.games(game_code)
);
CREATE TABLE public.treasury_transactions (
  transaction_id uuid NOT NULL DEFAULT gen_random_uuid(),
  game_code text NOT NULL,
  treasurer_player_id uuid NOT NULL,
  day_number integer NOT NULL,
  action_type USER-DEFINED NOT NULL,
  target_player_id uuid,
  points_spent numeric NOT NULL,
  details text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT treasury_transactions_pkey PRIMARY KEY (transaction_id),
  CONSTRAINT treasury_transactions_treasurer_player_id_fkey FOREIGN KEY (treasurer_player_id) REFERENCES public.players(player_id),
  CONSTRAINT treasury_transactions_target_player_id_fkey FOREIGN KEY (target_player_id) REFERENCES public.players(player_id),
  CONSTRAINT treasury_transactions_game_code_fkey FOREIGN KEY (game_code) REFERENCES public.games(game_code)
);
CREATE TABLE public.vengeance_guesses (
  vengeance_id uuid NOT NULL DEFAULT gen_random_uuid(),
  game_code text NOT NULL,
  day_number integer NOT NULL,
  vengeance_player_id uuid NOT NULL,
  imprisoned_player_id uuid NOT NULL,
  guessed_voter_id uuid NOT NULL,
  is_correct boolean NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT vengeance_guesses_pkey PRIMARY KEY (vengeance_id),
  CONSTRAINT vengeance_guesses_guessed_voter_id_fkey FOREIGN KEY (guessed_voter_id) REFERENCES public.players(player_id),
  CONSTRAINT vengeance_guesses_game_code_fkey FOREIGN KEY (game_code) REFERENCES public.games(game_code),
  CONSTRAINT vengeance_guesses_imprisoned_player_id_fkey FOREIGN KEY (imprisoned_player_id) REFERENCES public.players(player_id),
  CONSTRAINT vengeance_guesses_vengeance_player_id_fkey FOREIGN KEY (vengeance_player_id) REFERENCES public.players(player_id)
);